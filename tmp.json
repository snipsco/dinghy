Package {
  manifest: Manifest {
  summary: Summary {
  inner: Inner {
  package_id: PackageId {
  name: "snips-asr",
  version: "0.52.0-SNAPSHOT",
  source: "file:///home/ratamovic/Project/snips/snips-platform/snips-asr/snips-asr"
}, dependencies: [Dependency {inner: Inner {name: "hound", source_id: SourceId {inner: SourceIdInner {url: "https://github.com/rust-lang/crates.io-index", canonical_url: "https://github.com/rust-lang/crates.io-index", kind: Registry, precise: None}}, req: VersionReq { predicates: [Predicate {op: Compatible, major: 3, minor: Some(3), patch: None, pre: [] }] }, specified_req: true, kind: Normal, only_match_name: false, optional: false, default_features: true, features: [], platform: None}}, Dependency {inner: Inner {name: "snips-audio", source_id: SourceId {inner: SourceIdInner {url: "file:///home/ratamovic/Project/snips/snips-platform/snips-audio-server/snips-audio", canonical_url: "file:///home/ratamovic/Project/snips/snips-platform/snips-audio-server/snips-audio", kind: Path, precise: None }}, req: VersionReq {predicates: [] }, specified_req: false, kind: Normal, only_match_name: false, optional: false, default_features: true, features: [], platform: None}}, Dependency {inner: Inner {name: "clap", source_id: SourceId {inner: SourceIdInner {url: "https://github.com/rust-lang/crates.io-index", canonical_url: "https://github.com/rust-lang/crates.io-index", kind: Registry, precise: None }}, req: VersionReq {predicates: [Predicate {op: Compatible, major: 2, minor: Some(28), patch: None, pre: [] }] }, specified_req: true, kind: Normal, only_match_name: false, optional: false, default_features: true, features: [], platform: None}}, Dependency {inner: Inner {name: "snips-broadcast-audio", source_id: SourceId {inner: SourceIdInner {url: "file:///home/ratamovic/Project/snips/snips-platform/snips-audio-server/snips-broadcast-audio", canonical_url: "file:///home/ratamovic/Project/snips/snips-platform/snips-audio-server/snips-broadcast-audio", kind: Path, precise: None }}, req: VersionReq {predicates: [] }, specified_req: false, kind: Normal, only_match_name: false, optional: false, default_features: true, features: [], platform: None}}, Dependency {inner: Inner {name: "snips-broadcast-tcp-client", source_id: SourceId {inner: SourceIdInner {url: "file:///home/ratamovic/Project/snips/snips-platform/snips-audio-server/snips-broadcast-tcp-client", canonical_url: "file:///home/ratamovic/Project/snips/snips-platform/snips-audio-server/snips-broadcast-tcp-client", kind: Path, precise: None }}, req: VersionReq {predicates: [] }, specified_req: false, kind: Normal, only_match_name: false, optional: false, default_features: true, features: [], platform: None}}, Dependency {inner: Inner {name: "snips-asr-hermes", source_id: SourceId {inner: SourceIdInner {url: "file:///home/ratamovic/Project/snips/snips-platform/snips-asr/snips-asr-hermes", canonical_url: "file:///home/ratamovic/Project/snips/snips-platform/snips-asr/snips-asr-hermes", kind: Path, precise: None }}, req: VersionReq {predicates: [] }, specified_req: false, kind: Normal, only_match_name: false, optional: false, default_features: true, features: [], platform: None}}, Dependency {inner: Inner {name: "hermes-mqtt", source_id: SourceId {inner: SourceIdInner {url: "file:///home/ratamovic/Project/snips/snips-platform/hermes-protocol/hermes-mqtt", canonical_url: "file:///home/ratamovic/Project/snips/snips-platform/hermes-protocol/hermes-mqtt", kind: Path, precise: None }}, req: VersionReq {predicates: [] }, specified_req: false, kind: Normal, only_match_name: false, optional: false, default_features: true, features: [], platform: None}}, Dependency {inner: Inner {name: "error-chain", source_id: SourceId {inner: SourceIdInner {url: "https://github.com/rust-lang/crates.io-index", canonical_url: "https://github.com/rust-lang/crates.io-index", kind: Registry, precise: None }}, req: VersionReq {predicates: [Predicate {op: Compatible, major: 0, minor: Some(11), patch: None, pre: [] }] }, specified_req: true, kind: Normal, only_match_name: false, optional: false, default_features: false, features: [], platform: None}}, Dependency {inner: Inner {name: "snips-asr-lib", source_id: SourceId {inner: SourceIdInner {url: "file:///home/ratamovic/Project/snips/snips-platform/snips-asr/snips-asr-lib", canonical_url: "file:///home/ratamovic/Project/snips/snips-platform/snips-asr/snips-asr-lib", kind: Path, precise: None }}, req: VersionReq {predicates: [] }, specified_req: false, kind: Normal, only_match_name: false, optional: false, default_features: false, features: [], platform: None}}, Dependency {inner: Inner {name: "time", source_id: SourceId {inner: SourceIdInner {url: "https://github.com/rust-lang/crates.io-index", canonical_url: "https://github.com/rust-lang/crates.io-index", kind: Registry, precise: None }}, req: VersionReq {predicates: [Predicate {op: Compatible, major: 0, minor: Some(1), patch: None, pre: [] }] }, specified_req: true, kind: Normal, only_match_name: false, optional: false, default_features: true, features: [], platform: None}}, Dependency {inner: Inner {name: "snips-broadcast-mqtt-client", source_id: SourceId {inner: SourceIdInner {url: "file:///home/ratamovic/Project/snips/snips-platform/snips-audio-server/snips-broadcast-mqtt-client", canonical_url: "file:///home/ratamovic/Project/snips/snips-platform/snips-audio-server/snips-broadcast-mqtt-client", kind: Path, precise: None }}, req: VersionReq {predicates: [] }, specified_req: false, kind: Normal, only_match_name: false, optional: false, default_features: true, features: [], platform: None}}, Dependency {inner: Inner {name: "log", source_id: SourceId {inner: SourceIdInner {url: "https://github.com/rust-lang/crates.io-index", canonical_url: "https://github.com/rust-lang/crates.io-index", kind: Registry, precise: None }}, req: VersionReq {predicates: [Predicate {op: Compatible, major: 0, minor: Some(3), patch: None, pre: [] }] }, specified_req: true, kind: Normal, only_match_name: false, optional: false, default_features: true, features: [], platform: None}}, Dependency {inner: Inner {name: "pretty_env_logger", source_id: SourceId {inner: SourceIdInner {url: "ssh://git@github.com/snipsco/pretty-env-logger", canonical_url: "https://git@github.com/snipsco/pretty-env-logger", kind: Git(Branch("master")), precise: None}}, req: VersionReq {predicates: [] }, specified_req: false, kind: Normal, only_match_name: false, optional: false, default_features: true, features: [], platform: None}}, Dependency {inner: Inner {name: "hermes", source_id: SourceId {inner: SourceIdInner {url: "file:///home/ratamovic/Project/snips/snips-platform/hermes-protocol", canonical_url: "file:///home/ratamovic/Project/snips/snips-platform/hermes-protocol", kind: Path, precise: None }}, req: VersionReq {predicates: [] }, specified_req: false, kind: Normal, only_match_name: false, optional: false, default_features: true, features: [], platform: None}}, Dependency {inner: Inner {name: "portaudio", source_id: SourceId {inner: SourceIdInner {url: "https://github.com/snipsco/rust-portaudio.git", canonical_url: "https://github.com/snipsco/rust-portaudio", kind: Git(Rev("8d87910")), precise: None}}, req: VersionReq {predicates: [] }, specified_req: false, kind: Normal, only_match_name: false, optional: false, default_features: true, features: [], platform: None}}, Dependency {inner: Inner {name: "snips-common-cli", source_id: SourceId {inner: SourceIdInner {url: "file:///home/ratamovic/Project/snips/snips-platform/snips-common/snips-common-cli", canonical_url: "file:///home/ratamovic/Project/snips/snips-platform/snips-common/snips-common-cli", kind: Path, precise: None }}, req: VersionReq {predicates: [] }, specified_req: false, kind: Normal, only_match_name: false, optional: false, default_features: true, features: [], platform: None}}, Dependency {inner: Inner {name: "snips-broadcast", source_id: SourceId {inner: SourceIdInner {url: "file:///home/ratamovic/Project/snips/snips-platform/snips-audio-server/snips-broadcast", canonical_url: "file:///home/ratamovic/Project/snips/snips-platform/snips-audio-server/snips-broadcast", kind: Path, precise: None }}, req: VersionReq {predicates: [] }, specified_req: false, kind: Normal, only_match_name: false, optional: false, default_features: true, features: [], platform: None}}, Dependency {inner: Inner {name: "clap", source_id: SourceId {inner: SourceIdInner {url: "https://github.com/rust-lang/crates.io-index", canonical_url: "https://github.com/rust-lang/crates.io-index", kind: Registry, precise: None }}, req: VersionReq {predicates: [Predicate {op: Compatible, major: 2, minor: Some(28), patch: None, pre: [] }] }, specified_req: true, kind: Build, only_match_name: false, optional: false, default_features: true, features: [], platform: None}}, Dependency {inner: Inner {name: "snips-common-cli", source_id: SourceId {inner: SourceIdInner {url: "file:///home/ratamovic/Project/snips/snips-platform/snips-common/snips-common-cli", canonical_url: "file:///home/ratamovic/Project/snips/snips-platform/snips-common/snips-common-cli", kind: Path, precise: None }}, req: VersionReq {predicates: [] }, specified_req: false, kind: Build, only_match_name: false, optional: false, default_features: true, features: [], platform: None}}], features: {}, checksum: None} }, targets: [Target {kind: Bin, name: "snips-asr", src_path: "/home/ratamovic/Project/snips/snips-platform/snips-asr/snips-asr/src/main.rs", required_features: None, tested: true, benched: true, doc: true, doctest: false, harness: true, for_host: false}, Target {kind: CustomBuild, name: "build-script-build", src_path: "/home/ratamovic/Project/snips/snips-platform/snips-asr/snips-asr/build.rs", required_features: None, tested: false, benched: false, doc: false, doctest: false, harness: true, for_host: true}], links: None, warnings: [], exclude: [], include: [], metadata: ManifestMetadata {authors: ["Mathieu Poumeyrol <mathieu.poumeyrol@snips.ai>"], keywords: [], categories: [], license: Some("TODO"), license_file: None, description: Some("Snips Automatic Speech Recognition"), readme: None, homepage: Some("https://snips.ai"), repository: Some("https://github.com/snipsco/snips-asr"), documentation: None, badges: {}}, profiles: Profiles {release: Profile {opt_level: "3", lto: false, codegen_units: None, rustc_args: None, rustdoc_args: None, debuginfo: None, debug_assertions: false, overflow_checks: false, rpath: false, test: false, doc: false, run_custom_build: false, check: false, panic: None}, dev: Profile {opt_level: "0", lto: false, codegen_units: None, rustc_args: None, rustdoc_args: None, debuginfo: Some(2), debug_assertions: true, overflow_checks: true, rpath: false, test: false, doc: false, run_custom_build: false, check: false, panic: None}, test: Profile {opt_level: "0", lto: false, codegen_units: None, rustc_args: None, rustdoc_args: None, debuginfo: Some(2), debug_assertions: true, overflow_checks: true, rpath: false, test: true, doc: false, run_custom_build: false, check: false, panic: None}, test_deps: Profile {opt_level: "0", lto: false, codegen_units: None, rustc_args: None, rustdoc_args: None, debuginfo: Some(2), debug_assertions: true, overflow_checks: true, rpath: false, test: false, doc: false, run_custom_build: false, check: false, panic: None}, bench: Profile {opt_level: "3", lto: false, codegen_units: None, rustc_args: None, rustdoc_args: None, debuginfo: None, debug_assertions: false, overflow_checks: false, rpath: false, test: true, doc: false, run_custom_build: false, check: false, panic: None }, bench_deps: Profile {opt_level: "3", lto: false, codegen_units: None, rustc_args: None, rustdoc_args: None, debuginfo: None, debug_assertions: false, overflow_checks: false, rpath: false, test: false, doc: false, run_custom_build: false, check: false, panic: None}, doc: Profile {opt_level: "0", lto: false, codegen_units: None, rustc_args: None, rustdoc_args: None, debuginfo: Some(2), debug_assertions: true, overflow_checks: true, rpath: false, test: false, doc: true, run_custom_build: false, check: false, panic: None}, custom_build: Profile {opt_level: "0", lto: false, codegen_units: None, rustc_args: None, rustdoc_args: None, debuginfo: Some(2), debug_assertions: true, overflow_checks: true, rpath: false, test: false, doc: false, run_custom_build: true, check: false, panic: None}, check: Profile {opt_level: "0", lto: false, codegen_units: None, rustc_args: None, rustdoc_args: None, debuginfo: Some(2), debug_assertions: true, overflow_checks: true, rpath: false, test: false, doc: false, run_custom_build: false, check: true, panic: None}, doctest: Profile { opt_level: "0", lto: false, codegen_units: None, rustc_args: None, rustdoc_args: None, debuginfo: Some(2), debug_assertions: true, overflow_checks: true, rpath: false, test: true, doc: true, run_custom_build: false, check: false, panic: None}}, publish: true, replace: [], patch: {}, workspace: Member { root: None}, original: TomlManifest {package: Some(TomlProject {name: "snips-asr", version: Version {major: 0, minor: 52, patch: 0, pre: [AlphaNumeric("SNAPSHOT")], build: [] }, authors: Some(["Mathieu Poumeyrol <mathieu.poumeyrol@snips.ai>"]), build: None, links: None, exclude: None, include: None, publish: None, workspace: None, cargo_features: None, im_a_teapot: None, description: Some("Snips Automatic Speech Recognition"), homepage: Some("https://snips.ai"), documentation: None, readme: None, keywords: None, categories: None, license: Some("TODO"), license_file: None, repository: Some("https://github.com/snipsco/snips-asr"), metadata: Some(Table({"deb": Table({"assets": Array([Array([String("target/release/snips-asr"), String("usr/bin/"), String("755")]), Array([String("debian/snips-asr.service"), String("/lib/systemd/system/snips-asr.service"), String("644")]), Array([String("target/release/completion/snips-asr.bash"), String("etc/bash_completion.d/"), String("644")]), Array([String("target/release/completion/snips-asr.fish"), String("usr/share/fish/vendor_completions.d/"), String("644")]), Array([String("target/release/completion/_snips-asr"), String("usr/share/zsh/vendor-completions/"), String("644")])]), "copyright": String("2017, Snips"), "depends": String("snips-kaldi, snips-platform-common, snips-platform-common (>= 0.52.0-SNAPSHOT~), snips-platform-common (<< 0.53.0-SNAPSHOT)"), "extended_description": String("A cli tool to run Snips Automated Speech Recognition"), "license_file": Array([String("LICENSE"), String("4")]), "maintainer": String("Thibaut Lorrain <thibaut.lorrain@snips.ai>"), "maintainer-scripts": String("debian"), "priority": String("optional"), "provides": String("snips-asr-service"), "section": String("utility")})}))}), project: None, profile: None, lib: None, bin: None, example: None, test: None, bench: None, dependencies: Some({"hound": Simple("3.3"), "snips-audio": Detailed(DetailedTomlDependency { version: None, path: Some("../../snips-audio-server/snips-audio"), git: None, branch: None, tag: None, rev: None, features: None, optional: None, default_features: None, default_features2: None}), "clap": Simple("2.28"), "snips-broadcast-audio": Detailed(DetailedTomlDependency {version: None, path: Some("../../snips-audio-server/snips-broadcast-audio"), git: None, branch: None, tag: None, rev: None, features: None, optional: None, default_features: None, default_features2: None}), "snips-broadcast-tcp-client": Detailed(DetailedTomlDependency {version: None, path: Some("../../snips-audio-server/snips-broadcast-tcp-client"), git: None, branch: None, tag: None, rev: None, features: None, optional: None, default_features: None, default_features2: None}), "snips-asr-hermes": Detailed(DetailedTomlDependency { version: None, path: Some("../snips-asr-hermes"), git: None, branch: None, tag: None, rev: None, features: None, optional: None, default_features: None, default_features2: None}), "hermes-mqtt": Detailed(DetailedTomlDependency {version: None, path: Some("../../hermes-protocol/hermes-mqtt"), git: None, branch: None, tag: None, rev: None, features: None, optional: None, default_features: None, default_features2: None}), "error-chain": Detailed(DetailedTomlDependency {version: Some("0.11"), path: None, git: None, branch: None, tag: None, rev: None, features: None, optional: None, default_features: Some(false), default_features2: None}), "snips-asr-lib": Detailed(DetailedTomlDependency {version: None, path: Some("../snips-asr-lib"), git: None, branch: None, tag: None, rev: None, features: None, optional: None, default_features: Some(false), default_features2: None}), "time": Simple("0.1"), "snips-broadcast-mqtt-client": Detailed(DetailedTomlDependency {version: None, path: Some("../../snips-audio-server/snips-broadcast-mqtt-client"), git: None, branch: None, tag: None, rev: None, features: None, optional: None, default_features: None, default_features2: None}), "log": Simple("0.3"), "pretty_env_logger": Detailed(DetailedTomlDependency {version: None, path: None, git: Some("ssh://git@github.com/snipsco/pretty-env-logger"), branch: None, tag: None, rev: None, features: None, optional: None, default_features: None, default_features2: None}), "hermes": Detailed(DetailedTomlDependency { version: None, path: Some("../../hermes-protocol"), git: None, branch: None, tag: None, rev: None, features: None, optional: None, default_features: None, default_features2: None}), "portaudio": Detailed(DetailedTomlDependency {version: None, path: None, git: Some("https://github.com/snipsco/rust-portaudio.git"), branch: None, tag: None, rev: Some("8d87910"), features: None, optional: None, default_features: None, default_features2: None}), "snips-common-cli": Detailed(DetailedTomlDependency {version: None, path: Some("../../snips-common/snips-common-cli"), git: None, branch: None, tag: None, rev: None, features: None, optional: None, default_features: None, default_features2: None}), "snips-broadcast": Detailed(DetailedTomlDependency {version: None, path: Some("../../snips-audio-server/snips-broadcast"), git: None, branch: None, tag: None, rev: None, features: None, optional: None, default_features: None, default_features2: None})}), dev_dependencies: None, dev_dependencies2: None, build_dependencies: Some({"clap": Simple("2.28"), "snips-common-cli": Detailed(DetailedTomlDependency {version: None, path: Some("../../snips-common/snips-common-cli"), git: None, branch: None, tag: None, rev: None, features: None, optional: None, default_features: None, default_features2: None})}), build_dependencies2: None, features: None, target: None, replace: None, patch: None, workspace: None, badges: None}, features: Features {test_dummy_stable: false, test_dummy_unstable: false, activated: [] }, im_a_teapot: None}, manifest_path: "/home/ratamovic/Project/snips/snips-platform/snips-asr/snips-asr/Cargo.toml"
} Bin "snips-asr" "/home/ratamovic/Project/snips/snips-platform/target/aarch64-unknown-linux-gnu/debug/deps/snips_asr-abd749ddee472be2"} Bin "snips-asr" "/home/ratamovic/Project/snips/snips-platform/target/aarch64-unknown-linux-gnu/debug/deps/snips_asr-abd749ddee472be2"